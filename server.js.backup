const express = require('express')
const next = require('next')
const path=require('path');

var logger = require('morgan');//在控制台中，显示req请求的信息
var cookieParser = require('cookie-parser');//这就是一个解析Cookie的工具。通过req.cookies可以取到传过来的cookie，并把它们转成对象。
var bodyParser = require('body-parser');//node.js 中间件，用于处理 JSON, Raw, Text 和 URL 编码的数据。
const app = express()

const dev = process.env.NODE_ENV !== 'production'
const apps = next({ dev })
const handle = apps.getRequestHandler()

// 载入中间件
app.use(logger('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));


apps.prepare()
.then(() => {

  app.get('/p/:id', (req, res) => {
    const actualPage = '/post'
    const queryParams = { id: req.params.id } 
    apps.render(req, res, actualPage, queryParams)
  })

  app.get('*', (req, res) => {
    return handle(req, res)
  })

  app.listen(3000,'10.41.2.64', (err) => {
    if (err) throw err
    console.log('Ready on http://10.41.2.64:3000')
  })
})
.catch((ex) => {
  console.error(ex.stack)
  process.exit(1)
})

app.use(function(err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

// 错误处理
app.use(function(req, res, next) {
  var err = new Error('Not Found');
  err.status = 404;
  next(err);
});